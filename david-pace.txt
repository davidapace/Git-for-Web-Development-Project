     
    CodePen URL: https://codepen.io/davidapace/pen/dyWMYEb?editors=1100


    1. What is Semantic HTML? 
        Semantic tags provide meaning to the information.

    2. What is HTML used for? 
        Putting information on a web page.

    3. What is an attribute and where do we put it? 
        They provide more information on the element. They go within the opening tag of an element.

    4. What is the h1 tag used for? How many times should I use it on a page?
        It is the primary title of a page. It should only be used once per page. 

    5. Name two tags that have required attributes
        Anchor and Image tags

    6. What do we put in the head of our HTML document? 
        title, base, link, meta, script, and style

    7. What is an id? 
        An attribute used to specify an element.

    8. What elements can I add an id to? 
        any

    9. How many times can I use the same id on a page? 
        Once per page

    10. What is a class? 
        An attribute used to specify one or more elements.

    11. What elements can I add a class to? 
        any

    12. How many times can I use the same class on a page? 
        unlimited

    13. How do I get my link to open in a new tab?
        Use the target="_blank" attribute

    14. What is the alt attribute in the image tag used for? 
        To describe the image in case the image is missing for if someone is using a screen reader.

    15. How do I reference an id?
        #idName

    16. What is the difference between a section and a div
        Section is semantic and div is not

    17. What is CSS used for? 
        Styling information on the web page

    18. How to we select an element? Example - every h2 on the page
        h2 {
            example:example;
        }

    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        class can be used multiple times and id can only be used once. Class is generally used in CSS and id is generally used in JavaScript.

    20. How do we select classes in CSS?
        .className

    21. How do we select a p element with a single class of “human””?
        .human p {
            example:example;
        }

    22. What is a parent child selector? When would this be useful? 
        it applies changes to everything within the parent element including the parent and all children

    23. How do you select all links within a div with the class of sidebar?
        .sidebar div {
            example:example;
        }

    24. What is a pseudo selector?
        Defines a special state of an element. Example: hover

    25. What do we use the change the spacing between lines?
        line-height

    26. What do we use to change the spacing between letters?
        letter-spacing

    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        text-transform

    28. How do I add a 1px border around my div that is dotted and black?
        div {
            border: black dotted 1px;
        }

    29. How do I select everything on the page? 
        *{

        }

    30. How do I write a comment in CSS?
        /* */

    31. How do I find out what file I am in, when I am using the command line? 
        pwd

    32. Using the command line - how do I see a list of files/folders in my current folder?
        ls

    33. How do I remove a file via the command line? Why do I have to be careful with this? 
        rm. because it doesn't confirm if you want to delete the file before it deletes it.

    34. Why should I use version control? 
        To track changes made to code over time.

    35. How often should I commit to github?
        every 20 minutes or after a major change

    36. What is the command we would use to push our repo up to github? 
        git push -u origin branch-name

    37. Walk me through Lambda's git flow. 
        Fork repo, git clone url, cd into folder, code ., git checkout -b first-last, git add ., git commit -m "message", git push -u origin first-last, create pull request, turn PR link into Canvas.
